--rolling 12 month sales, trans, and channel type (omni, instore, online only)

--ty time frame
Define End_Day_Idnt = '2017336';
Define End_Wk_Idnt = '201748';
DEFINE time_frame = '2017';

--ly time frame
Define End_Day_Idnt = '2016336';
Define End_Wk_Idnt = '201648';
DEFINE time_frame = '2016';


create table rolling12_&time_frame as
select
case when stre.indiv_id!= ecom.indiv_id then coalesce(stre.indiv_id, ecom.indiv_id)
when stre.indiv_id not null then stre.indiv_id
when ecom.indiv_id not null then ecom.indiv_id end as indiv_id,
sum((coalesce(stre.rolling12store_sales,0))+ (coalesce(ecom.rolling12ecom_sales, 0))) as total_sales,
sum((coalesce(stre.rolling12store_trans,0))+ (coalesce(ecom.rolling12ecom_trans, 0))) as total_trans,
case when stre.indiv_id= ecom.indiv_id then 'omni'
when stre.indiv_id >0 then 'store only'
when ecom.indiv_id >0 then 'ecom only' end as channel
from (select
      a.indiv_id,
      count(distinct a.pos_trans_key) as rolling12store_trans,
      sum(a.extended_sls_amt) as rolling12store_sales
     from         ua_pos_trans_dtl a
     Inner Join Ua_Store B On A.Loc_Key = B.Loc_Key
     Where a.wk_idnt between (&end_wk_idnt -99) and &end_wk_idnt
      and a.day_idnt between ( &end_day_idnt - 1000 + 1) and &end_day_idnt
      and a.trans_typ_key in(19,22,33)
      and b.distt_idnt != '999'
    group by a.indiv_id) stre
    full outer join(
    select
    ecom.indiv_id,
    count(distinct ecom.order_id) as rolling12ecom_trans,
    sum(ecom.flfll_net_ttl_amt) as rolling12ecom_sales
    --fulfilled sales
    from ua_ecom_order_dtl   ecom
    inner join ua_pos_tm_day tm on to_date(ecom.flfll_first_dt) = (tm.day_dt)
    --filters on the first fulfill date
    where tm.day_idnt between  (&end_day_idnt - 1000 + 1) and &
    group by ecom.indiv_id) 
    ecom on stre.indiv_id = ecom.indiv_id
group by stre.indiv_id, ecom.indiv_id;
