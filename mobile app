drop table app_data_cleaned;

create table APP_DATA_CLEANED as
select
day_idnt                                                        as day_idnt, 
concat(DBMS_Random.Value(1,9), app.device_time_stamp)           as session_id,
(case when app.loyalty_id is not null then (concat(DBMS_Random.Value(1,9), app.device_time_stamp))
else null end)                                                  as cust_session_id,
app.device_time_stamp,
app.loyalty_id, 
app.store_id, 
loy.indiv_id,
app.device_id
from APP_DATA app
inner join ua_pos_tm_day tm on to_date(substr(DEVICE_TIME_STAMP, 1, 10),'YYYY-MM-DD') = tm.day_dt
left join ua_loyalty loy on app.loyalty_id  = loy.loyalty_id;

--sales by week, matched to store
select 
tm.wk_idnt                                                                           as week,
count(distinct session_id)                                                           as sessions,
count(distinct cust_session_id)                                                      as cust_sessions,
--count(distinct CONCAT(app.device_time_stamp, app.device_id, to_char(loy.indiv_id)))  as id_sessions,
--count(distinct CONCAT(app.device_time_stamp, app.device_id, to_char(dtl.indiv_id)))  as purchasing_sessions,
count(distinct dtl.indiv_id)                                                         as cust_count,
count(distinct dtl.pos_trans_key)                                                    as trans,
sum(dtl.extended_sls_amt)                                                            as sales,
sum(dtl.grs_mrgn_amt)                                                                as gm,
sum(dtl.qty)                                                                         as units 
from APP_DATA_CLEANED app
inner join ua_pos_tm_day tm           on  app.day_idnt= tm.day_idnt
left join ua_loyalty loy              on loy.loyalty_id = app.loyalty_id 
left join ua_pos_trans_dtl dtl        on loy.indiv_id = dtl.indiv_id  and tm.day_idnt = dtl.day_idnt and dtl.trans_typ_key in (19,22,33)
left join ua_store str                on str.loc_key = dtl.loc_key and app.store_id = str.loc_key
group by tm.wk_idnt
order by tm.wk_idnt asc;

select 
count(distinct session_id)                                                           as sessions,
count(distinct cust_session_id)                                                      as cust_sessions,
count(distinct dtl.indiv_id)                                                         as cust_count,
count(distinct dtl.pos_trans_key)                                                    as trans,
sum(dtl.extended_sls_amt)                                                            as sales,
sum(dtl.grs_mrgn_amt)                                                                as gm,
sum(dtl.qty)                                                                         as units 
from APP_DATA_CLEANED app
inner join ua_pos_tm_day tm           on  app.day_idnt= tm.day_idnt
left join ua_loyalty loy              on loy.loyalty_id = app.loyalty_id 
left join ua_pos_trans_dtl dtl        on loy.indiv_id = dtl.indiv_id  and tm.day_idnt = dtl.day_idnt and dtl.trans_typ_key in (19,22,33)
left join ua_store str                on str.loc_key = dtl.loc_key and app.store_id = str.loc_key;

select 
sku.grp_desc,
count(distinct session_id)                                                           as sessions,
count(distinct cust_session_id)                                                      as cust_sessions,
count(distinct dtl.indiv_id)                                                         as cust_count,
count(distinct dtl.pos_trans_key)                                                    as trans,
sum(dtl.extended_sls_amt)                                                            as sales,
sum(dtl.grs_mrgn_amt)                                                                as gm,
sum(dtl.qty)                                                                         as units 
from APP_DATA_CLEANED app
inner join ua_pos_tm_day tm           on  app.day_idnt= tm.day_idnt
left join ua_loyalty loy              on loy.loyalty_id = app.loyalty_id 
left join ua_pos_trans_dtl dtl        on loy.indiv_id = dtl.indiv_id  and tm.day_idnt = dtl.day_idnt and dtl.trans_typ_key in (19,22,33)
left join ua_store str                on str.loc_key = dtl.loc_key and app.store_id = str.loc_key
inner join ua_pos_prod_sku sku on dtl.sku_key = sku.sku_key
group by sku.grp_desc;

select 
sku.class_desc,
count(distinct session_id)                                                           as sessions,
count(distinct cust_session_id)                                                      as cust_sessions,
count(distinct dtl.indiv_id)                                                         as cust_count,
count(distinct dtl.pos_trans_key)                                                    as trans,
sum(dtl.extended_sls_amt)                                                            as sales,
sum(dtl.grs_mrgn_amt)                                                                as gm,
sum(dtl.qty)                                                                         as units 
from APP_DATA_CLEANED app
inner join ua_pos_tm_day tm           on  app.day_idnt= tm.day_idnt
left join ua_loyalty loy              on loy.loyalty_id = app.loyalty_id 
left join ua_pos_trans_dtl dtl        on loy.indiv_id = dtl.indiv_id  and tm.day_idnt = dtl.day_idnt and dtl.trans_typ_key in (19,22,33)
left join ua_store str                on str.loc_key = dtl.loc_key and app.store_id = str.loc_key
inner join ua_pos_prod_sku sku on dtl.sku_key = sku.sku_key
group by sku.class_desc
order by sessions desc;

-------this year metrics-------
DEFINE start_day_idnt = '2017190';
DEFINE end_day_idnt = '2018028';
DEFINE start_wk_idnt = '201728';
DEFINE end_wk_idnt = '201804';
DEFINE mth = 'app';

create table start_wk_&mth as
select &end_wk_idnt as end_wk_idnt,
wk_idnt as start_wk_idnt ,
day_idnt as start_day_idnt
from ua_pos_tm_day
where day_dt = 
(
select day_dt - 357
from
(select max(day_dt) as day_dt
from ua_pos_tm_day where wk_idnt = &end_wk_idnt)
);


--rolling12 
create table rolling12trans_&mth as
select
coalesce(stre.indiv_id, ecom.indiv_id)                                                                                                          as indiv_id,
sum((coalesce(stre.rolling12store_sales,0))+ (coalesce(ecom.rolling12ecom_sales, 0)))                                                           as total_sales,
sum((coalesce(stre.rolling12store_trans,0))+ (coalesce(ecom.rolling12ecom_trans, 0)))                                                           as total_trans,
sum((coalesce(stre.rolling12store_units,0))+ (coalesce(ecom.rolling12ecom_units, 0)))                                                           as total_units,
sum(stre.rolling12store_gm)                                                                                                                     as gm_store,
sum(stre.rolling12store_sales)                                                                                                                  as sales_store,
(case when stre.indiv_id= ecom.indiv_id then 'omni' when stre.indiv_id >0 then 'store only' when ecom.indiv_id >0 then 'ecom only' end)         as channel
from (select
          dtl.indiv_id,
          count(distinct dtl.pos_trans_key)                       as rolling12store_trans,
          sum(dtl.extended_sls_amt)                               as rolling12store_sales,
          sum(dtl.grs_mrgn_amt)                                   as rolling12store_gm,
          sum(dtl.qty)                                            as rolling12store_units
         from         ua_pos_trans_dtl dtl
         inner join ua_store str on dtl.loc_key = str.loc_key
         where dtl.wk_idnt between (select start_wk_idnt from start_wk_&mth) and &end_wk_idnt and dtl.trans_typ_key in(19,22,33) and str.distt_idnt != '999'
         and dtl.indiv_id in (select indiv_id from app_data_cleaned)
        group by dtl.indiv_id) stre
    full outer join(
    select
        ecom.indiv_id,
        count(distinct ecom.order_id)                           as rolling12ecom_trans,
        sum(ecom.flfll_net_ttl_amt)                             as rolling12ecom_sales,
        sum(ecom.flfll_unit_cnt)                                as rolling12ecom_units
        from ua_ecom_order_dtl   ecom
        inner join ua_pos_tm_day tm on to_date(ecom.flfll_first_dt) = (tm.day_dt)
        where tm.wk_idnt between (select start_wk_idnt from start_wk_&mth) and &end_wk_idnt
        and ecom.indiv_id in (select indiv_id from app_data_cleaned)
        group by ecom.indiv_id) ecom on stre.indiv_id = ecom.indiv_id
group by stre.indiv_id, ecom.indiv_id;

--time frame metrics
create table timeframe_&mth as
select
(case when stre.indiv_id= ecom.indiv_id then stre.indiv_id else coalesce(stre.indiv_id, ecom.indiv_id) end)                                     as indiv_id,
sum((coalesce(stre.store_trans,0))+ (coalesce(ecom.ecom_trans, 0)))                                                                             as timeframe_trans,
sum((coalesce(stre.store_sales,0))+ (coalesce(ecom.ecom_sales, 0)))                                                                             as timeframe_sales,
sum((coalesce(stre.store_units,0))+ (coalesce(ecom.ecom_units, 0)))                                                                             as timeframe_units,
sum(stre.store_gm)                                                                                                                              as store_gm,
sum(stre.store_sales)                                                                                                                           as store_sales,
(case when stre.indiv_id= ecom.indiv_id then 'omni' when stre.indiv_id >0 then 'store only' when ecom.indiv_id >0 then 'ecom only' end)         as channel
from (select
          dtl.indiv_id,
          count(distinct dtl.pos_trans_key)                       as store_trans,
          sum(dtl.extended_sls_amt)                               as store_sales,
          sum(dtl.grs_mrgn_amt)                                   as store_gm,
          sum(dtl.qty)                                            as store_units
         from         ua_pos_trans_dtl dtl
         inner join ua_store str on dtl.loc_key = str.loc_key
         where dtl.wk_idnt between &start_wk_idnt and &end_wk_idnt and dtl.trans_typ_key in(19,22,33) and str.distt_idnt != '999'
         and dtl.indiv_id in (select indiv_id from app_data_cleaned)
        group by dtl.indiv_id) stre
    full outer join(
    select
        ecom.indiv_id,
        count(distinct ecom.order_id)                           as ecom_trans,
        sum(ecom.flfll_net_ttl_amt)                             as ecom_sales,
        sum(ecom.flfll_unit_cnt)                                as ecom_units
        from ua_ecom_order_dtl   ecom
        inner join ua_pos_tm_day tm on to_date(ecom.flfll_first_dt) = (tm.day_dt)
        where tm.wk_idnt between &start_wk_idnt and &end_wk_idnt
        and ecom.indiv_id in (select indiv_id from app_data_cleaned)
        group by ecom.indiv_id) ecom on stre.indiv_id = ecom.indiv_id
group by stre.indiv_id, ecom.indiv_id;

--new  and reactivated customers   
create table last_shop_excl_mth_&mth as
  select indiv_id,
         max(last_shop) as last_shop
         from
       (select
       a.indiv_id
      ,max(a.day_idnt) as last_shop
    from         ua_pos_trans_dtl a
    inner join   ua_store         b on a.loc_key = b.loc_key
    where a.wk_idnt < &start_wk_idnt
      and a.indiv_id in (select indiv_id from app_data_cleaned)
      and a.trans_typ_key in(19,22,33)
      and b.distt_idnt != '999'
    group by a.indiv_id
union all
   select
       a.indiv_id
      ,max(b.day_idnt) as last_shop
    from         ua_ecom_order_dtl  a
    inner join   ua_pos_tm_day      b on to_date(a.flfll_first_dt) = to_date(b.day_dt)
    where b.wk_idnt < &start_wk_idnt
    and a.indiv_id in (select indiv_id from app_data_cleaned)
    group by indiv_id)
group by indiv_id;

create table new_cust_&mth as
  select            
  distinct (indiv_id)     
  from timeframe_&mth
  where indiv_id not in (select distinct indiv_id from last_shop_excl_mth_&mth);
  
create table first_shop_&mth as
  select indiv_id,
         min(first_shop) as first_shop
         from
       (select
       a.indiv_id
      ,min(a.day_idnt) as first_shop
    from         ua_pos_trans_dtl a
    inner join   ua_store         b on a.loc_key = b.loc_key
    where a.wk_idnt between &start_wk_idnt and &end_wk_idnt
      and a.trans_typ_key in(19,22,33)
      and b.distt_idnt != '999'
      and a.indiv_id in (select indiv_id from app_data_cleaned)
    group by a.indiv_id
union all
   select
       a.indiv_id
      ,min(b.day_idnt) as first_shop
    from         ua_ecom_order_dtl  a
    inner join   ua_pos_tm_day      b on to_date(a.flfll_first_dt) = to_date(b.day_dt)
    where b.wk_idnt between &start_wk_idnt and &end_wk_idnt
    and indiv_id in (select indiv_id from app_data_cleaned)
    group by indiv_id)
group by indiv_id;

create table react_cust_&mth as
    select distinct(indiv_id)
    from timeframe_&mth
    where indiv_id in (select distinct indiv_id from last_shop_excl_mth_&mth where last_shop <= (select start_day_idnt from start_wk_&mth));

create table new_cust_&mth as
  select            
  distinct (indiv_id)     
  from timeframe_&mth
  where indiv_id not in (select distinct indiv_id from last_shop_excl_mth_&mth);
  
--new and reactivated customers
 create table new_react_cust_&mth as
    select distinct indiv_id
    from new_cust_&mth
    union
    select distinct indiv_id
    from react_cust_&mth;

--define customer groups
create table cust_groups_&mth as
    select
       case when b.indiv_id is not null then 'new'
            when a.total_trans >= 6  then 'top'
            when a.total_trans >= 3  then 'middle'
            when a.total_trans >= 1  then 'bottom'
                                        else 'z.error'
       end custgroup
      ,a.indiv_id
    from        rolling12trans_&mth a
      left join new_react_cust_&mth b on a.indiv_id = b.indiv_id;
select
count(distinct indiv_id) as customers,
custgroup
from cust_groups_&mth  
group by custgroup;

select 
custgroup,
count(distinct app.indiv_id)                                                         as customers,
count(distinct session_id)                                                           as sessions,
count(distinct cust_session_id)                                                      as cust_sessions,
count(distinct dtl.indiv_id)                                                         as cust_transacted,
count(distinct dtl.pos_trans_key)                                                    as trans,
sum(dtl.extended_sls_amt)                                                            as sales,
sum(dtl.grs_mrgn_amt)                                                                as gm,
sum(dtl.qty)                                                                         as units 
from APP_DATA_CLEANED app
inner join ua_pos_tm_day tm           on  app.day_idnt= tm.day_idnt
inner join cust_groups_APP  cust      on app.indiv_id = cust.indiv_id
left join ua_loyalty loy              on loy.loyalty_id = app.loyalty_id 
left join ua_pos_trans_dtl dtl        on loy.indiv_id = dtl.indiv_id  and tm.day_idnt = dtl.day_idnt and dtl.trans_typ_key in (19,22,33)
left join ua_store str                on str.loc_key = dtl.loc_key and app.store_id = str.loc_key
group by custgroup
