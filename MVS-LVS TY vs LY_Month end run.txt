/*MVS-LVS, TY-LY*/

DEFINE start_wk_idnt = '201644';
DEFINE end_wk_idnt = '201743';
DEFINE start_wk_ly = '201544';
DEFINE end_wk_ly = '201643';
DEFINE mth = 'nov';
DEFINE mthty = 'nov17';
DEFINE mthly = 'nov16';

--TY

--MVS customers with 50% discount
create table mvs_discount_&mthty as 
select distinct indiv_id                                                         
from UA_POS_TRANS_DTL                                                         
where UA_POS_TRANS_DTL.DISC_PCT >=50                                                      
and WK_IDNT between &start_wk_idnt and &end_wk_idnt;
    
--MVS customers using heavy coupons                                                         
create table mvs_coupon_&mthty as 
select distinct indiv_id 
from UA_POS_COUPON_DTL 
where CPN_UPC_DESC IN  (                                                              
    'CPN 30% ENTIRE',                                                       
    'CPN 50% ERPP  D01',                                                  
    '1CPN 50% AORPI',                                                      
    '1CPN 50% D01',                                                            
    'CPN 25% ENTIRE DEPT 45',                                                      
    'CPN 60% OFF AORPI',                                                                
    'CPN 40% ENTIRE',                                                       
    '1CPN 55% AORPI',                                                      
    '1CPN 40% ENTIRE',                                                     
    'CPN 50% AORPI  DEPT 45',                                                       
    '1CPN 60% AORPI',                                                      
    '1CPN 30% ENTIRE',                                                     
    '1CPN 25% ENTIRE - ND',                                                           
    '1CPN 30% ENTIRE - ND',                                                           
   'CPN 50% AORPI',                                                         
    'CPN 50% D01',                                                              
    '30% ENTIRE (ENTIRE, INCLUDING',                                                      
    '1CPN 40% ERPP',                                                         
    '1CPN 50% AORPI DEPT 45',                                                     
    'CPN 55% AORPI',                                                         
    '1CPN 60% ERPP',                                                         
    '1CPN 60% OFF AORPI'                                                               
  ) 
and WK_IDNT between &start_wk_idnt and &end_wk_idnt;        

--lifetime discount amount dimension  
create table mvs_disc_amt_&mthty as
select indiv_id,
sum(extended_sls_amt) as sales,
(sum(disc_amt) * -1) as disc_amt
from ua_pos_trans_dtl
where wk_idnt<=&end_wk_idnt
group by indiv_id;
 
create table allcust_avg_disc_&mthty as
select indiv_id,
sales,
disc_amt,
(sales+disc_amt) as total_sale
from mvs_disc_amt_&mthty;

create table allcust_disc_pct_&mthty as
select indiv_id,
(disc_amt/total_sale) as disc_pct_ttl
from allcust_avg_disc_&mthty
where total_sale != 0;

--Union table 
create table mvs_all_&mthty as
select distinct indiv_id
from 
(select distinct indiv_id from mvs_discount_&mthty)
union
(select distinct indiv_id from mvs_coupon_&mthty)
union
(select distinct indiv_id from allcust_disc_pct_&mthty where disc_pct_ttl >= 0.3);

--Final TY table
--classify all customers in TY dataset to either MVS or LVS
create table value_segment_&mthty as
select distinct a.indiv_id
,(case when b.indiv_id is not null then 'MVS' else 'LVS' end) as value_segment_ty
from rolling12trans_&mthty a  --this is the base table with TY rolling12month trans
left join mvs_all_&mthty b on a.indiv_id = b.indiv_id;


--LY

--MVS customers with 50% discount
create table mvs_discount_&mthly as 
select distinct indiv_id                                                         
from UA_POS_TRANS_DTL                                                         
where UA_POS_TRANS_DTL.DISC_PCT >=50                                                      
and WK_IDNT between &start_wk_ly and &end_wk_ly;
    
--MVS customers using heavy coupons                                                         
create table mvs_coupon_&mthly as 
select distinct indiv_id 
from UA_POS_COUPON_DTL 
where CPN_UPC_DESC IN  (                                                              
    'CPN 30% ENTIRE',                                                       
    'CPN 50% ERPP  D01',                                                  
    '1CPN 50% AORPI',                                                      
    '1CPN 50% D01',                                                            
    'CPN 25% ENTIRE DEPT 45',                                                      
    'CPN 60% OFF AORPI',                                                                
    'CPN 40% ENTIRE',                                                       
    '1CPN 55% AORPI',                                                      
    '1CPN 40% ENTIRE',                                                     
    'CPN 50% AORPI  DEPT 45',                                                       
    '1CPN 60% AORPI',                                                      
    '1CPN 30% ENTIRE',                                                     
    '1CPN 25% ENTIRE - ND',                                                           
    '1CPN 30% ENTIRE - ND',                                                           
   'CPN 50% AORPI',                                                         
    'CPN 50% D01',                                                              
    '30% ENTIRE (ENTIRE, INCLUDING',                                                      
    '1CPN 40% ERPP',                                                         
    '1CPN 50% AORPI DEPT 45',                                                     
    'CPN 55% AORPI',                                                         
    '1CPN 60% ERPP',                                                         
    '1CPN 60% OFF AORPI'                                                               
  ) 
and WK_IDNT between &start_wk_ly and &end_wk_ly;        

--lifetime discount amount dimension  
create table mvs_disc_amt_&mthly as
select indiv_id,
sum(extended_sls_amt) as sales,
(sum(disc_amt) * -1) as disc_amt
from ua_pos_trans_dtl
where wk_idnt<=&end_wk_ly
group by indiv_id;
 
create table allcust_avg_disc_&mthly as
select indiv_id,
sales,
disc_amt,
(sales+disc_amt) as total_sale
from mvs_disc_amt_&mthly;

create table allcust_disc_pct_&mthly as
select indiv_id,
(disc_amt/total_sale) as disc_pct_ttl
from allcust_avg_disc_&mthly
where total_sale != 0;

--Union table
create table mvs_all_&mthly as
select distinct indiv_id
from 
(select distinct indiv_id from mvs_discount_&mthly)
union
(select distinct indiv_id from mvs_coupon_&mthly)
union
(select distinct indiv_id from allcust_disc_pct_&mthly where disc_pct_ttl >= 0.3);

--Final LY table
--classify all customers in LY dataset either to MVS or LVS
create table value_segment_&mthly as
select distinct a.indiv_id
,(case when b.indiv_id is not null then 'MVS' else 'LVS' end) as value_segment_ly
from rolling12trans_&mthly a --this is the base table with LY rolling12month trans
left join mvs_all_&mthly b on a.indiv_id = b.indiv_id;

-- drop table mvs_discount_mthty purge;
-- drop table mvs_coupon_mthty purge;
-- drop table mvs_disc_amt_mthty purge;
-- drop table allcust_avg_disc_mthty purge;
-- drop table allcust_disc_pct_mthty purge;
-- drop table mvs_all_mthty purge;
-- drop table value_segment_&mthty purge;

-- drop table mvs_discount_mthly purge;
-- drop table mvs_coupon_mthly purge;
-- drop table mvs_disc_amt_mthly purge;
-- drop table allcust_avg_disc_mthly purge;
-- drop table allcust_disc_pct_mthly purge;
-- drop table mvs_all_mthly purge;
-- drop table value_segment_&mthly purge;