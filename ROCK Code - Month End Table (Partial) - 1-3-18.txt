-----Start ROCK code-----
DEFINE start_day_idnt = '2017302';
DEFINE end_day_idnt = '2017336';
DEFINE start_wk_idnt = '201744';
DEFINE end_wk_idnt = '201748';
DEFINE end_dt = '30dec2017';
DEFINE mth = 'dec17';

--get all indiv_id's
create table all_indivs_24mo_&mth as
select distinct indiv_id
from 
(select distinct indiv_id
from ua_pos_trans_dtl a
inner join ua_store   b on a.loc_key = b.loc_key
where a.wk_idnt between (&end_wk_idnt - 200 + 1) and &end_wk_idnt
and b.distt_idnt != '999'
union
select distinct indiv_id
from ua_ecom_order_dtl   a
inner join ua_pos_tm_day b on a.flfll_first_dt = b.day_dt
where b.wk_idnt between (&end_wk_idnt - 200 + 1) and &end_wk_idnt);

--cust groups - this month
--rolling12 in-store
create table rolling12trans_&mth as
select
indiv_id,
sum(rolling12) as rolling12trans,
max(lastshop) as lastshop,
sum(sales) as rolling12sales
from (select
      a.indiv_id
      ,count(distinct a.pos_trans_key) as rolling12
      ,max(a.day_idnt) as lastshop
      ,sum(a.extended_sls_amt) as sales
     from         ua_pos_trans_dtl a
     inner join ua_store b on a.loc_key = b.loc_key
     where a.wk_idnt between ( &end_wk_idnt - 100 + 1) and &end_wk_idnt
      and a.trans_typ_key in(19,22,33)
      and b.distt_idnt != '999'
    group by a.indiv_id
union all
    select
    ecom.indiv_id
    ,count(distinct ecom.order_id) as rolling12
    ,max(tm.day_idnt) as lastshop
    ,sum(ecom.dmnd_net_ttl_amt) as sales
    from ua_ecom_order_dtl   ecom
    inner join ua_pos_tm_day tm on to_date(ecom.dmnd_dt) = (tm.day_dt)
    where tm.day_idnt between  (&end_day_idnt - 1000 + 1) and &end_day_idnt
    group by ecom.indiv_id)
group by indiv_id;
    
--new customers   
create table new_cust_&mth as
    select distinct a.indiv_id
    from rolling12trans_&mth a
    inner join ua_individual_agg b on a.indiv_id = b.indiv_id
    inner join ua_pos_tm_day     c on to_date(b.first_purchase_dt) = to_date(c.day_dt)
    where c.day_idnt >= &start_day_idnt;

--reactivated customers
create table last_shop_excl_mth_&mth as
  select indiv_id,
         max(last_shop) as last_shop
         from
       (select
       a.indiv_id
      ,max(a.day_idnt) as last_shop
    from         ua_pos_trans_dtl a
    inner join   ua_store         b on a.loc_key = b.loc_key
    where a.wk_idnt < &start_wk_idnt
      and a.trans_typ_key in(19,22,33)
      and b.distt_idnt != '999'
    group by a.indiv_id
union all
   select
       a.indiv_id
      ,max(b.day_idnt) as last_shop
    from         ua_ecom_order_dtl  a
    inner join   ua_pos_tm_day      b on to_date(a.dmnd_dt) = to_date(b.day_dt)
    where b.wk_idnt < &start_wk_idnt
    and b.day_idnt < &start_day_idnt
    group by indiv_id)
group by indiv_id;
     
create table react_cust_&mth as
    select distinct indiv_id
    from rolling12trans_&mth
    where indiv_id in
    (select distinct indiv_id from last_shop_excl_mth_&mth where last_shop <= (&end_day_idnt - 1000));
    
--new and reactivated customers
 create table new_react_cust_&mth as
    select distinct indiv_id
    from new_cust_&mth
    union
    select distinct indiv_id
    from react_cust_&mth;

--define customer groups
create table cust_groups_&mth as
    select
       case when b.indiv_id is not null then 'new'
            when a.rolling12trans >= 6  then 'top'
            when a.rolling12trans >= 3  then 'middle'
            when a.rolling12trans >= 1  then 'bottom'
                                        else 'z.error'
       end custgroup
      ,a.indiv_id
      ,a.lastshop
      ,a.rolling12sales
    from        rolling12trans_&mth a
      left join new_react_cust_&mth b on a.indiv_id = b.indiv_id;
      
drop table rolling12trans_&mth purge;
drop table new_cust_&mth purge;
drop table last_shop_excl_mth_&mth purge;
drop table react_cust_&mth purge;
drop table new_react_cust_&mth purge;
------END CUSTOMER GROUPS THIS MONTH------

------TY MONTH SALES------
create table ty_mo_sls_&mth as
select indiv_id,
sum(trans) as trans_ty_&mth,
sum(sales) as sales_ty_&mth,
sum(units) as units_ty_&mth,
sum(gm_rt_store) as gm_rt_store_ty_&mth
from 
(
select indiv_id,
count(distinct pos_trans_key) as trans,
sum(extended_sls_amt) as sales,
sum(qty) as units,
(case when sum(extended_sls_amt) = 0 then 0 else (sum(grs_mrgn_amt)/sum(extended_sls_amt)) end) as gm_rt_store
from ua_pos_trans_dtl a
inner join ua_store   b on a.loc_key = b.loc_key
where wk_idnt between &start_wk_idnt and &end_wk_idnt
and b.distt_idnt != '999'
group by indiv_id
union all
select indiv_id,
count(distinct order_id) as trans,
sum(flfll_net_ttl_amt) as sales,
sum(flfll_unit_cnt) as units,
0 as gm_rt_store
from ua_ecom_order_dtl   a
inner join ua_pos_tm_day b on a.flfll_first_dt = b.day_dt
where b.wk_idnt between &start_wk_idnt and &end_wk_idnt
group by indiv_id
)
group by indiv_id;

------TY 12mo SALES------
create table ty_12mo_sls_&mth as
select indiv_id,
sum(trans) as trans_ty,
sum(sales) as sales_ty,
sum(units) as units_ty,
sum(gm_rt_store) as gm_rt_store_ty
from 
(
select indiv_id,
count(distinct pos_trans_key) as trans,
sum(extended_sls_amt) as sales,
sum(qty) as units,
(case when sum(extended_sls_amt) = 0 then 0 else (sum(grs_mrgn_amt)/sum(extended_sls_amt)) end) as gm_rt_store
from ua_pos_trans_dtl a
inner join ua_store   b on a.loc_key = b.loc_key
where wk_idnt between (&end_wk_idnt - 100 + 1) and &end_wk_idnt
and b.distt_idnt != '999'
group by indiv_id
union all
select indiv_id,
count(distinct order_id) as trans,
sum(flfll_net_ttl_amt) as sales,
sum(flfll_unit_cnt) as units,
0 as gm_rt_store
from ua_ecom_order_dtl   a
inner join ua_pos_tm_day b on a.flfll_first_dt = b.day_dt
where b.wk_idnt between (&end_wk_idnt - 100 + 1) and &end_wk_idnt
group by indiv_id
)
group by indiv_id;

------LY MONTH SALES------
create table ly_mo_sls_&mth as
select indiv_id,
sum(trans) as trans_ly_&mth,
sum(sales) as sales_ly_&mth,
sum(units) as units_ly_&mth,
sum(gm_rt_store) as gm_rt_store_ly_&mth
from 
(
select indiv_id,
count(distinct pos_trans_key) as trans,
sum(extended_sls_amt) as sales,
sum(qty) as units,
(case when sum(extended_sls_amt) = 0 then 0 else (sum(grs_mrgn_amt)/sum(extended_sls_amt)) end) as gm_rt_store
from ua_pos_trans_dtl a
inner join ua_store   b on a.loc_key = b.loc_key
where wk_idnt between (&start_wk_idnt - 100) and (&end_wk_idnt - 100)
and b.distt_idnt != '999'
group by indiv_id
union all
select indiv_id,
count(distinct order_id) as trans,
sum(flfll_net_ttl_amt) as sales,
sum(flfll_unit_cnt) as units,
0 as gm_rt_store
from ua_ecom_order_dtl   a
inner join ua_pos_tm_day b on a.flfll_first_dt = b.day_dt
where b.wk_idnt between (&start_wk_idnt - 100) and (&end_wk_idnt - 100)
group by indiv_id
)
group by indiv_id;

------LY 12mo SALES------
create table ly_12mo_sls_&mth as
select indiv_id,
sum(trans) as trans_ly,
sum(sales) as sales_ly,
sum(units) as units_ly,
sum(gm_rt_store) as gm_rt_store_ly
from 
(
select indiv_id,
count(distinct pos_trans_key) as trans,
sum(extended_sls_amt) as sales,
sum(qty) as units,
(case when sum(extended_sls_amt) = 0 then 0 else (sum(grs_mrgn_amt)/sum(extended_sls_amt)) end) as gm_rt_store
from ua_pos_trans_dtl a
inner join ua_store   b on a.loc_key = b.loc_key
where wk_idnt between (&end_wk_idnt - 200 + 1) and (&end_wk_idnt - 100)
and b.distt_idnt != '999'
group by indiv_id
union all
select indiv_id,
count(distinct order_id) as trans,
sum(flfll_net_ttl_amt) as sales,
sum(flfll_unit_cnt) as units,
0 as gm_rt_store
from ua_ecom_order_dtl   a
inner join ua_pos_tm_day b on a.flfll_first_dt = b.day_dt
where b.wk_idnt between (&end_wk_idnt - 200 + 1) and (&end_wk_idnt - 100)
group by indiv_id
)
group by indiv_id;

create table all_indivs_sls as
select a.indiv_id,
(case when b.trans_ty_&mth is null then 0 else b.trans_ty_&mth end) as trans_ty_&mth,
(case when b.sales_ty_&mth is null then 0 else b.sales_ty_&mth end) as sales_ty_&mth,
(case when b.units_ty_&mth is null then 0 else b.units_ty_&mth end) as units_ty_&mth,
(case when b.gm_rt_store_ty_&mth is null then 0 else b.gm_rt_store_ty_&mth end) as gm_rt_store_ty_&mth,
(case when c.trans_ty is null then 0 else c.trans_ty end) as trans_ty_12mth,
(case when c.sales_ty is null then 0 else c.sales_ty end) as sales_ty_12mth,
(case when c.units_ty is null then 0 else c.units_ty end) as units_ty_12mth,
(case when c.gm_rt_store_ty is null then 0 else c.gm_rt_store_ty end) as gm_rt_store_ty_12mth,
(case when d.trans_ly_&mth is null then 0 else d.trans_ly_&mth end) as trans_ly_&mth,
(case when d.sales_ly_&mth is null then 0 else d.sales_ly_&mth end) as sales_ly_&mth,
(case when d.units_ly_&mth is null then 0 else d.units_ly_&mth end) as units_ly_&mth,
(case when d.gm_rt_store_ly_&mth is null then 0 else d.gm_rt_store_ly_&mth end) as gm_rt_store_ly_&mth,
(case when e.trans_ly is null then 0 else e.trans_ly end) as trans_ly_12mth,
(case when e.sales_ly is null then 0 else e.sales_ly end) as sales_ly_12mth,
(case when e.units_ly is null then 0 else e.units_ly end) as units_ly_12mth,
(case when e.gm_rt_store_ly is null then 0 else e.gm_rt_store_ly end) as gm_rt_store_ly_12mth
from all_indivs_24mo_&mth a
left join ty_mo_sls_&mth b on a.indiv_id = b.indiv_id
left join ty_12mo_sls_&mth c on a.indiv_id = c.indiv_id
left join ly_mo_sls_&mth d on a.indiv_id = d.indiv_id
left join ly_12mo_sls_&mth e on a.indiv_id = e.indiv_id;

drop table ty_mo_sls_&mth purge;
drop table ty_12mo_sls_&mth purge;
drop table ly_mo_sls_&mth purge;
drop table ly_12mo_sls_&mth purge;




------DROP TABLES------
drop table all_indivs_24mo_&mth purge;